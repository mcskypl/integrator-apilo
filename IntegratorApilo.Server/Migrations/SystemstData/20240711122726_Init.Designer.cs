// <auto-generated />
using System;
using FirebirdSql.EntityFrameworkCore.Firebird.Metadata;
using IntegratorApilo.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IntegratorApilo.Server.Migrations.SystemstData
{
    [DbContext(typeof(SystemstDataContext))]
    [Migration("20240711122726_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Fb:ValueGenerationStrategy", FbValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 31);

            modelBuilder.Entity("IntegratorApilo.Shared.Streamsoft.ApiloConfig", b =>
                {
                    b.Property<int>("IdConfig")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_CONFIG")
                        .HasAnnotation("Fb:ValueGenerationStrategy", FbValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessToken")
                        .HasMaxLength(1000)
                        .HasColumnType("VARCHAR(1000)")
                        .HasColumnName("ACCESS_TOKEN");

                    b.Property<DateTime?>("AccessTokenExp")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("ACCESS_TOKEN_EXP");

                    b.Property<string>("ApiAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("API_ADDRESS");

                    b.Property<string>("AppDescription")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR(250)")
                        .HasColumnName("APP_DESCRIPTION");

                    b.Property<string>("AppName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)")
                        .HasColumnName("APP_NAME");

                    b.Property<string>("AuthToken")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("AUTH_TOKEN");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CLIENT_ID");

                    b.Property<string>("ClientSecret")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("CLIENT_SECRET");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("LAST_UPDATED_AT");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(1000)
                        .HasColumnType("VARCHAR(1000)")
                        .HasColumnName("REFRESH_TOKEN");

                    b.Property<DateTime?>("RefreshTokenExp")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("REFRESH_TOKEN_EXP");

                    b.Property<int>("SyncOrdersMin")
                        .HasColumnType("INTEGER")
                        .HasColumnName("SYNC_ORDERS_MIN");

                    b.Property<int>("SyncStocksMin")
                        .HasColumnType("INTEGER")
                        .HasColumnName("SYNC_STOCKS_MIN");

                    b.HasKey("IdConfig");

                    b.ToTable("XXX_APILO_CONFIG");
                });

            modelBuilder.Entity("IntegratorApilo.Shared.Streamsoft.ApiloDatabase", b =>
                {
                    b.Property<int>("IdDatabase")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_DATABASE")
                        .HasAnnotation("Fb:ValueGenerationStrategy", FbValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConnectionString")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("VARCHAR(1000)")
                        .HasColumnName("CONNECTION_STRING");

                    b.Property<int>("IdConfig")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_CONFIG");

                    b.HasKey("IdDatabase");

                    b.HasIndex("IdConfig");

                    b.ToTable("XXX_APILO_DATABASE");
                });

            modelBuilder.Entity("IntegratorApilo.Shared.Streamsoft.ApiloDatabase", b =>
                {
                    b.HasOne("IntegratorApilo.Shared.Streamsoft.ApiloConfig", "ApiloConfig")
                        .WithMany("ApiloDatabases")
                        .HasForeignKey("IdConfig")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApiloConfig");
                });

            modelBuilder.Entity("IntegratorApilo.Shared.Streamsoft.ApiloConfig", b =>
                {
                    b.Navigation("ApiloDatabases");
                });
#pragma warning restore 612, 618
        }
    }
}
