// <auto-generated />
using System;
using FirebirdSql.EntityFrameworkCore.Firebird.Metadata;
using IntegratorApilo.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IntegratorApilo.Server.Migrations
{
    [DbContext(typeof(MainDataContext))]
    [Migration("20240719143431_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Fb:ValueGenerationStrategy", FbValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 31);

            modelBuilder.Entity("IntegratorApilo.Shared.Streamsoft.ApiloAccount", b =>
                {
                    b.Property<int>("IdAccount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_ACCOUNT")
                        .HasAnnotation("Fb:ValueGenerationStrategy", FbValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Active")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ACTIVE");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("CREATED_AT");

                    b.Property<int>("IdConnection")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_CONNECTION");

                    b.Property<int?>("IdKontrah")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_KONTRAH");

                    b.Property<string>("KodUrzzew")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("VARCHAR(15)")
                        .HasColumnName("KOD_URZZEW");

                    b.Property<int>("PlatformAccountId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("PLATFORM_ACCOUNT_ID");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("IdAccount");

                    b.HasIndex("IdConnection");

                    b.ToTable("XXX_APILO_ACCOUNT");
                });

            modelBuilder.Entity("IntegratorApilo.Shared.Streamsoft.ApiloConnection", b =>
                {
                    b.Property<int>("IdConnection")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_CONNECTION")
                        .HasAnnotation("Fb:ValueGenerationStrategy", FbValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConnectionString")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("VARCHAR(1000)")
                        .HasColumnName("CONNECTION_STRING");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("DatabaseName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("DATABASE_NAME");

                    b.Property<int>("IdShop")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_SHOP");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("IdConnection");

                    b.HasIndex("IdShop");

                    b.ToTable("XXX_APILO_CONNECTION");
                });

            modelBuilder.Entity("IntegratorApilo.Shared.Streamsoft.ApiloOrderStatus", b =>
                {
                    b.Property<int>("OrderStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ORDER_STATUS_ID")
                        .HasAnnotation("Fb:ValueGenerationStrategy", FbValueGenerationStrategy.IdentityColumn)
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("DESCRIPTION")
                        .HasAnnotation("Relational:JsonPropertyName", "description");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("KEY")
                        .HasAnnotation("Relational:JsonPropertyName", "key");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("NAME")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<int>("ShopId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("SHOP_ID");

                    b.HasKey("OrderStatusId");

                    b.HasIndex("ShopId");

                    b.ToTable("XXX_APILO_ORDER_STATUS");
                });

            modelBuilder.Entity("IntegratorApilo.Shared.Streamsoft.ApiloSetting", b =>
                {
                    b.Property<int>("IdSetting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_SETTING")
                        .HasAnnotation("Fb:ValueGenerationStrategy", FbValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("CREATED_AT");

                    b.Property<int>("IdSettingType")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_SETTING_TYPE");

                    b.Property<string>("SettingName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("SETTING_NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("IdSetting");

                    b.ToTable("XXX_APILO_SETTING");

                    b.HasData(
                        new
                        {
                            IdSetting = 10001,
                            CreatedAt = new DateTime(2024, 7, 19, 16, 34, 31, 535, DateTimeKind.Local).AddTicks(6311),
                            IdSettingType = 0,
                            SettingName = "Adres API",
                            UpdatedAt = new DateTime(2024, 7, 19, 16, 34, 31, 535, DateTimeKind.Local).AddTicks(6249)
                        },
                        new
                        {
                            IdSetting = 10002,
                            CreatedAt = new DateTime(2024, 7, 19, 16, 34, 31, 535, DateTimeKind.Local).AddTicks(6315),
                            IdSettingType = 0,
                            SettingName = "Client ID",
                            UpdatedAt = new DateTime(2024, 7, 19, 16, 34, 31, 535, DateTimeKind.Local).AddTicks(6314)
                        },
                        new
                        {
                            IdSetting = 10003,
                            CreatedAt = new DateTime(2024, 7, 19, 16, 34, 31, 535, DateTimeKind.Local).AddTicks(6318),
                            IdSettingType = 0,
                            SettingName = "Client Secret",
                            UpdatedAt = new DateTime(2024, 7, 19, 16, 34, 31, 535, DateTimeKind.Local).AddTicks(6317)
                        },
                        new
                        {
                            IdSetting = 10004,
                            CreatedAt = new DateTime(2024, 7, 19, 16, 34, 31, 535, DateTimeKind.Local).AddTicks(6321),
                            IdSettingType = 0,
                            SettingName = "Auth Token",
                            UpdatedAt = new DateTime(2024, 7, 19, 16, 34, 31, 535, DateTimeKind.Local).AddTicks(6320)
                        },
                        new
                        {
                            IdSetting = 10005,
                            CreatedAt = new DateTime(2024, 7, 19, 16, 34, 31, 535, DateTimeKind.Local).AddTicks(6323),
                            IdSettingType = 0,
                            SettingName = "Access Token",
                            UpdatedAt = new DateTime(2024, 7, 19, 16, 34, 31, 535, DateTimeKind.Local).AddTicks(6322)
                        },
                        new
                        {
                            IdSetting = 10006,
                            CreatedAt = new DateTime(2024, 7, 19, 16, 34, 31, 535, DateTimeKind.Local).AddTicks(6325),
                            IdSettingType = 0,
                            SettingName = "Access Token Exp",
                            UpdatedAt = new DateTime(2024, 7, 19, 16, 34, 31, 535, DateTimeKind.Local).AddTicks(6324)
                        },
                        new
                        {
                            IdSetting = 10007,
                            CreatedAt = new DateTime(2024, 7, 19, 16, 34, 31, 535, DateTimeKind.Local).AddTicks(6328),
                            IdSettingType = 0,
                            SettingName = "Refresh Token",
                            UpdatedAt = new DateTime(2024, 7, 19, 16, 34, 31, 535, DateTimeKind.Local).AddTicks(6327)
                        },
                        new
                        {
                            IdSetting = 10008,
                            CreatedAt = new DateTime(2024, 7, 19, 16, 34, 31, 535, DateTimeKind.Local).AddTicks(6330),
                            IdSettingType = 0,
                            SettingName = "Refresh Token Exp",
                            UpdatedAt = new DateTime(2024, 7, 19, 16, 34, 31, 535, DateTimeKind.Local).AddTicks(6329)
                        },
                        new
                        {
                            IdSetting = 10009,
                            CreatedAt = new DateTime(2024, 7, 19, 16, 34, 31, 535, DateTimeKind.Local).AddTicks(6332),
                            IdSettingType = 0,
                            SettingName = "Synchronizacja zamówień",
                            UpdatedAt = new DateTime(2024, 7, 19, 16, 34, 31, 535, DateTimeKind.Local).AddTicks(6331)
                        },
                        new
                        {
                            IdSetting = 10010,
                            CreatedAt = new DateTime(2024, 7, 19, 16, 34, 31, 535, DateTimeKind.Local).AddTicks(6334),
                            IdSettingType = 0,
                            SettingName = "Last update",
                            UpdatedAt = new DateTime(2024, 7, 19, 16, 34, 31, 535, DateTimeKind.Local).AddTicks(6333)
                        });
                });

            modelBuilder.Entity("IntegratorApilo.Shared.Streamsoft.ApiloShop", b =>
                {
                    b.Property<int>("IdShop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_SHOP")
                        .HasAnnotation("Fb:ValueGenerationStrategy", FbValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("VARCHAR(155)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("ShopName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)")
                        .HasColumnName("SHOP_NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("IdShop");

                    b.ToTable("XXX_APILO_SHOP");
                });

            modelBuilder.Entity("IntegratorApilo.Shared.Streamsoft.ApiloShopSetting", b =>
                {
                    b.Property<int>("IdShopSetting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_SHOP_SETTING")
                        .HasAnnotation("Fb:ValueGenerationStrategy", FbValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("CREATED_AT");

                    b.Property<DateTime?>("DatetimeValue")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("DATETIME_VALUE");

                    b.Property<int>("IdSetting")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_SETTING");

                    b.Property<int>("IdShop")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_SHOP");

                    b.Property<int?>("IntValue")
                        .HasColumnType("INTEGER")
                        .HasColumnName("INT_VALUE");

                    b.Property<decimal?>("NumericValue")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("NUMERIC_VALUE");

                    b.Property<string>("StringValue")
                        .HasMaxLength(1000)
                        .HasColumnType("VARCHAR(1000)")
                        .HasColumnName("STRING_VALUE");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("IdShopSetting");

                    b.HasIndex("IdSetting");

                    b.HasIndex("IdShop")
                        .HasDatabaseName("IX_XXX_APILO_SHOP_SETTING_ID_~1");

                    b.ToTable("XXX_APILO_SHOP_SETTING");
                });

            modelBuilder.Entity("IntegratorApilo.Shared.Streamsoft.ApiloAccount", b =>
                {
                    b.HasOne("IntegratorApilo.Shared.Streamsoft.ApiloConnection", "ApiloConnection")
                        .WithMany("ApiloAccounts")
                        .HasForeignKey("IdConnection")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApiloConnection");
                });

            modelBuilder.Entity("IntegratorApilo.Shared.Streamsoft.ApiloConnection", b =>
                {
                    b.HasOne("IntegratorApilo.Shared.Streamsoft.ApiloShop", "ApiloShop")
                        .WithMany("ApiloConnections")
                        .HasForeignKey("IdShop")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApiloShop");
                });

            modelBuilder.Entity("IntegratorApilo.Shared.Streamsoft.ApiloOrderStatus", b =>
                {
                    b.HasOne("IntegratorApilo.Shared.Streamsoft.ApiloShop", "ApiloShop")
                        .WithMany("ApiloOrderStatuses")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApiloShop");
                });

            modelBuilder.Entity("IntegratorApilo.Shared.Streamsoft.ApiloShopSetting", b =>
                {
                    b.HasOne("IntegratorApilo.Shared.Streamsoft.ApiloSetting", "ApiloSetting")
                        .WithMany("ApiloShopSettings")
                        .HasForeignKey("IdSetting")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IntegratorApilo.Shared.Streamsoft.ApiloShop", "ApiloShop")
                        .WithMany("ApiloShopSettings")
                        .HasForeignKey("IdShop")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_XXX_APILO_SHOP_SETTING_XXX~1");

                    b.Navigation("ApiloSetting");

                    b.Navigation("ApiloShop");
                });

            modelBuilder.Entity("IntegratorApilo.Shared.Streamsoft.ApiloConnection", b =>
                {
                    b.Navigation("ApiloAccounts");
                });

            modelBuilder.Entity("IntegratorApilo.Shared.Streamsoft.ApiloSetting", b =>
                {
                    b.Navigation("ApiloShopSettings");
                });

            modelBuilder.Entity("IntegratorApilo.Shared.Streamsoft.ApiloShop", b =>
                {
                    b.Navigation("ApiloConnections");

                    b.Navigation("ApiloOrderStatuses");

                    b.Navigation("ApiloShopSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
